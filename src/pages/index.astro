---
import { getCollection } from "astro:content"
import { Image } from "astro:assets"

import BaseLayout from "../layouts/BaseLayout.astro"
import ProfilePic from "../images/profilePic.jpg"
import ListItem from "./components/ListItem.astro"
import Card from "./components/Card.astro"

const pageTitle = "Home Page"

const recentPosts = (await getCollection("blog"))
  .sort(
    (a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime(),
  )
  .slice(0, 10)

const latestChapters = (await getCollection("gs"))
  .sort((a, b) => b.data.part - a.data.part)
  .slice(0, 10)

const projects = [
  {
    title: "Grand Simulation (Ongoing) [Web Novel]",
    link: "/gs",
    content: `A programmer trapped in a simulation! He and a band of misfits selected as "test subjects" must successfully complete the "test run" to be able to return to their world or die trying. Follow along on his journey where he matches his wits against the creators and their eerily familiar creations in a vast fantastical world, seeking a way back home.`,
  },
  {
    title: "Fate of Arda (Discontinued) [Web Novel]",
    link: "/foa",
    content: `About a boy with a strange past, becoming a linchpin in a conflict spanning across realms. A coming of age with ancient blood with tragic power. A tale of love, courage and heartbreak.`,
  },
  {
    title: "Zettel Merken [Self-Help]",
    link: "https://github.com/p-tupe/zettel-merken",
    content: `Supercharge your Supercharge your learning by combining two of the most revolutionary ideas in knowledge enhancement!`,
    isLinkExternal: true,
  },
  {
    title: "Creatures [Canvas Simulation]",
    link: "https://p-tupe.github.io/creatures",
    content: `A simulation of an environment where different creatures interact with the surroundings and each other.`,
  },
  {
    title: "nvim.rss [Editor Plugin]",
    link: "https://www.github.com/p-tupe/nvim-rss",
    content: `A simple RSS Reader plugin for Neovim!`,
    isLinkExternal: true,
  },
  {
    title: "Pingmon [Monitoring Tool]",
    link: "https://github.com/p-tupe/pingmon",
    content: `Self-hosted web-site and jobs monitoring, with downtime notifications pushed to Slack.`,
    isLinkExternal: true,
  },
  {
    title: "Impossible XO [Board Game]",
    link: "https://p-tupe.github.io/impossible-xo",
    content: `A tic-tac-toe game that is impossible to win!`,
  },
  {
    title: "Binary Clock ",
    link: "https://p-tupe.github.io/binary-clock",
    content: `A Binary Coded Decimal representation of current time.`,
  },
]
---

<BaseLayout pageTitle={pageTitle}>
  <section class="landing">
    <div style="text-align: center">
      <Image
        loading="eager"
        src={ProfilePic}
        alt="Pritesh Tupe's Profile"
        class="profilePic"
      />

      <h1>PRITESH TUPE</h1>
      <p style="color: var(--subcontent-color);">
        Programmer | Writer | Violinist
      </p>
    </div>

    <blockquote class="quote">
      With all its sham, drudgery, and broken dreams, it is still a beautiful
      world. Be cheerful. Strive to be happy. &nbsp;<a
        style="color: var(--subcontent-color);text-decoration: none;"
        href="https://desiderata.com/">~ Desiderata</a
      >
    </blockquote>

    <div style="width: 100%; display: flex; justify-content: space-evenly;">
      <a href="/notes">Notes</a>
      <a href="/photos">Photos</a>
      <a href="/travels">Travels</a>
      <a href="/about">About</a>
      <a href="/rss.xml">RSS</a>
    </div>

    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      stroke-width="2"
      stroke-linecap="round"
      stroke-linejoin="round"
      class="chevron-down"
    >
      <polyline points="3 10 12 15 21 10"></polyline>
    </svg>
  </section>

  <section class="list">
    <h1>Recent Posts</h1>
    <ul class="list">
      {
        recentPosts.map((post) => (
          <ListItem
            subtitle={new Date(post.data.date).toLocaleDateString("en-US", {
              year: "numeric",
              month: "long",
            })}
            title={post.data.title}
            url={`/posts/${post.id}`}
          />
        ))
      }
      <ListItem title="Show More" url="/posts" />
    </ul>
  </section>

  <section class="list">
    <h1>Latest Grand Simulation Chapters</h1>
    <ul class="list">
      {
        latestChapters.map((ch) => (
          <ListItem title={ch.data.title} url={`/gs/${ch.id}`} />
        ))
      }
      <ListItem title="Show All" url="/gs" />
    </ul>
  </section>

  <section>
    <h1>Notable Projects</h1>
    <div class="cards">
      {
        projects.map((p) => (
          <Card
            title={p.title}
            content={p.content}
            link={p.link}
            isLinkExternal={p.isLinkExternal}
          />
        ))
      }
    </div>
  </section>
</BaseLayout>

<style>
  section {
    display: flex;
    flex-direction: column;
    align-items: center;
    min-height: 100vh;
  }

  section.landing {
    justify-content: space-evenly;

    .profilePic {
      max-width: 300px;
      height: auto;
      margin: 0 auto;
      border-radius: 999px;
      box-shadow: 0 1px 14px 1px var(--content-color);
    }
  }

  div.cards {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 1em;
  }

  @media screen and (max-width: 768px) {
    div.cards {
      grid-template-columns: repeat(1, 1fr);
    }
  }

  section.list {
    justify-content: space-between;

    ul.list {
      width: 100%;
      display: flex;
      flex-direction: column;
      flex: 1;
      justify-content: space-evenly;
      padding: 5em;
    }

    @media screen and (max-width: 768px) {
      ul.list {
        padding: 1em;
      }
    }
  }

  svg.chevron-down {
    position: absolute;
    bottom: 0;
    left: 50%;
    animation: bounce 2s infinite;
  }

  @keyframes bounce {
    0%,
    20%,
    50%,
    80%,
    100% {
      transform: translateY(0);
    }
    40% {
      transform: translateY(-10px);
    }
    60% {
      transform: translateY(-5px);
    }
  }

  .quote {
    position: relative;
    text-align: center;
    font-family: cursive;
  }

  @media screen and (min-width: 768px) {
    .quote:before,
    .quote:after {
      position: absolute;
      color: var(--emphasis-color);
      font-size: 4em;
    }

    .quote:before {
      content: "“";
      left: -1rem;
      top: -3.5rem;
    }

    .quote:after {
      content: "”";
      right: -1rem;
      bottom: -4rem;
    }
  }
</style>
