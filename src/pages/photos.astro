---
import BaseLayout from "../layouts/BaseLayout.astro"
import Image from "astro/components/Image.astro"

const images = import.meta.glob<{ default: ImageMetadata }>(
  "../collections/gallery/*.{jpg,jpeg,png}",
)
---

<BaseLayout>
  <h1 style="text-align:center;">Photography Archive</h1>
  <div id="gallery">
    {
      Object.keys(images).map((path) => (
        <Image
          src={images[path]()}
          alt={path}
          onclick="toggleSlideShow(this)"
        />
      ))
    }
  </div>

  <div id="slideShow" class="hidden">
    <div id="slideShowBg">
      <div
        id="loading"
        style="padding: 1em; background-color: rgba(0,0,0,0.5); border-radius: 1em;"
      >
        Loading...
      </div>
      <img style="fill: contain;cursor: pointer;" />
    </div>
    <button id="closeBtn" onclick="toggleSlideShow()">
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"
      >
        <line x1="18" y1="6" x2="6" y2="18"></line>
        <line x1="6" y1="6" x2="18" y2="18"></line>
      </svg>
    </button>
    <button id="nextBtn" onclick="nextImage()"
      ><svg
        xmlns="http://www.w3.org/2000/svg"
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"
        class="chevron-right"
      >
        <polyline points="9 18 15 12 9 6"></polyline>
      </svg></button
    >
    <button id="prevBtn" onclick="prevImage()"
      ><svg
        xmlns="http://www.w3.org/2000/svg"
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"
        class="chevron-left"
      >
        <polyline points="15 18 9 12 15 6"></polyline>
      </svg></button
    >
  </div>
</BaseLayout>

<script is:inline>
  let currentImage = null

  const slideShowEle = document.getElementById("slideShow")
  const slideShowBg = document.getElementById("slideShowBg")
  const loader = slideShowBg.firstElementChild
  const slideShowImg = slideShowBg.lastElementChild

  function toggleSlideShow(e) {
    if (e) {
      document.documentElement.requestFullscreen()
      showImage(e)
    } else {
      if (document.fullscreenElement) document.exitFullscreen()
      hideImage()
    }
  }

  function showImage(image) {
    loader.style.display = "flex"
    currentImage = image
    slideShowImg.src = image.src
    slideShowImg.onload = () => {
      loader.style.display = "none"
    }
    slideShowEle?.classList.remove("hidden")
  }

  function hideImage() {
    slideShowEle?.classList.add("hidden")
  }

  function nextImage() {
    if (currentImage?.nextSibling) showImage(currentImage.nextSibling)
  }

  function prevImage() {
    if (currentImage?.previousSibling) showImage(currentImage.previousSibling)
  }

  document.addEventListener("keydown", (event) => {
    if (event.key === "ArrowLeft") return nextImage()
    if (event.key === "ArrowRight") return prevImage()
    if (event.key === "Escape") return toggleSlideShow()
    if (event.key === "Backspace") return toggleSlideShow()
    // if (event.key === "Enter") return toggleSlideShow()
  })

  let startX, startY
  slideShowImg.addEventListener("touchstart", (event) => {
    startX = event.touches[0].clientX
    startY = event.touches[0].clientY
  })

  slideShowImg.addEventListener("touchend", (event) => {
    const moveX = event.changedTouches[0].clientX
    const moveY = event.changedTouches[0].clientY
    const diffX = startX - moveX
    const diffY = startY - moveY

    if (diffX > 50) {
      nextImage()
    } else if (diffX < -50) {
      prevImage()
    } else if (diffY < 50) {
      toggleSlideShow()
      // event.preventDefault()
      // event.stopPropagation()
    }
  })
</script>

<style>
  :global(main) {
    max-width: 100%;
    padding-left: 0;
    padding-right: 0;
  }

  div#gallery {
    columns: 3;
    gap: 0;
    line-height: 0;

    img {
      width: 100%;
      height: auto;
      cursor: pointer;
    }
  }

  @media screen and (max-width: 768px) {
    div#gallery {
      columns: 2;
    }
  }

  @media screen and (min-width: 1200px) {
    div#gallery {
      columns: 4;
    }
  }

  div#slideShow {
    position: fixed;
    top: 0;
    left: 0;
    min-width: 100vw;
    min-height: 100vh;
    background-color: rgb(0, 0, 0, 0.95);
    overflow: hidden;

    button {
      border-radius: 2em;
      padding: 1em;
      background-color: rgb(0, 0, 0, 0.5);
    }

    #closeBtn {
      position: absolute;
      top: 1em;
      right: 1em;
    }

    #prevBtn {
      position: absolute;
      top: 50%;
      left: 1em;
    }

    #nextBtn {
      position: absolute;
      top: 50%;
      right: 1em;
    }

    #slideShowBg {
      position: fixed;
      width: 100%;
      height: 100%;
      max-width: 100vw;
      max-height: 100vh;

      img {
        width: 100%;
        height: 100%;
        object-fit: contain;
      }
    }

    #loading {
      display: flex;
      position: fixed;
      top: 50%;
      left: 50%;
    }
  }
</style>
